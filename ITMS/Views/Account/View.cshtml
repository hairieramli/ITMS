@model ITMS.Models.UserModel
@using ITMS.Models;
@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}


<script type="text/javascript">
    $(document).ready(function () {
        $("#newbtn").click(function () {
            let el = document.getElementById("add_emp");
            let inputs = el.getElementsByTagName("input");

            for (let i = 0; i < inputs.length; i++) {
                if (inputs[i].type == "text")
                    inputs[i].value = "";
            }

            $("#add_emp").show();
            $("#edit_emp").hide();
            $("#add_pic").hide();
        });

        @if(TempData["return_value"] != null)
        {
            if(TempData["error"] != null)
            {

            }
            else if((int)TempData["return_value"] <= 0)
            {
                @:$("#add_emp").addClass("show");
                @:$("#tblData").notify("Failed to add new Employee.", { position: "bottom", className: "error" });
            }
            else
            {
                @:$("#tblData").notify("Succesfully added new User", { position: "top center", className: "success", arrowShow: false });
            }
        }
        else if(TempData["edit_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#tblData").notify(@TempData["error"].ToString(), { position: "top center", className:"warn", arrowShow:false});
            }
            else if((int)TempData["edit_value"] > 0)
            {
                @:$("#edit_emp").show();
            }
        }
        else if(TempData["edit_return_value"] != null)
        {
            @:$("#edit_emp").show();
            if(TempData["error"] != null)
            {
                
            }
            else if((int)TempData["edit_return_value"] > 0)
            {
                @:$("#btnSubmit").notify("Saved Changes successfully.", { position: "bottom", className: "success" });
            }
        }

    });



</script><link href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>

<div class="page-header">
    <div class="pageheader-title">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="page-breadcrumb">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="breadcrumb-link">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Account</li>
            </ol>
        </nav>
    </div>
</div>

<div>
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            @if (HttpContext.Current.Session["User_Cat"] != null)
            {
                if (HttpContext.Current.Session["User_Cat"].ToString() == "1")
                {
                    <a id="newbtn" class="btn btn-app btn-info">
                        <i class="fa fa-edit"></i>
                        New User
                    </a>
                }
            }

        </div>
    </div>
    <div class="row">
        &nbsp;
    </div>
    <div id="add_emp" class="collapse">
        <div class="section-block" id="basicform">
            <h3 class="section-title">Create a New Account</h3>
            <p></p>
        </div>
        <div class="card" style="width:90%;">
            <h5 class="card-header">Personal Details</h5>
            @using (Html.BeginForm("Create", "Account", FormMethod.Post, new { @name = "FormUsers" }))
            {@Html.AntiForgeryToken();

            <div class="card-body">
                <div class="form-group">
                    <label class="col-form-label">Name</label>
                    @Html.TextBox("UserName", "", new { @class = "form-control", @required = "required" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Address Line 1</label>
                    @Html.TextBox("add_1", "", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Address Line 2</label>
                    @Html.TextBox("add_2", "", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Postcode</label>
                    @Html.TextBox("add_poscode", "", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">City</label>
                    @Html.TextBox("add_city", "", new { @class = "form-control" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">State</label>
                    @Html.TextBox("add_state", "", new { @class = "form-control" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">Phone No</label>
                    @Html.TextBox("phone_no", "", new { @class = "form-control" })

                </div>
            </div>
            <div class="card-body border-top">
                <h3>Work Details</h3>
                <div class="form-group">
                    <label class="col-form-label">Position</label>
                    @if (ViewData["UserCatList"] != null)
                    {
                        @Html.DropDownList("position", ViewData["UserCatList"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    }

                </div>
            </div>
            <div class="card-body border-top">
                <h3>Login Details</h3>
                <div class="form-group">
                    <label class="col-form-label">Email</label>
                    @Html.TextBox("email", "", new { @class = "form-control", @type = "email" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">Set Password</label>
                    @Html.TextBox("password", "", new { @class = "form-control", @type = "password" })

                </div>
                @*<div class="form-group">
                <label class="col-form-label">Password Confirmation</label>
                @Html.TextBox("password_confirm", "", new { @class = "form-control", @type = "password" })

            </div>*@
            </div>
            <div class="card-footer border-top">
                <button type="submit" class="btn btn-success">Create</button>
                <button type="button" class="btn btn-default" onclick="$('#add_emp').hide();">Cancel</button>
            </div>
        }
        </div>
    </div>
    <div id="add_pic" data-keyboard="false" aria-hidden="true" class="modal fade hide" style="" data-backdrop="static" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Upload Picture</h5>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Picture", "Account", FormMethod.Post, new {enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.Hidden("hidIDUser", Model != null ? Model.IDUser.ToString() : "0");
                    <div class="form-group">
                        @if (Model != null)
                        {
                            if (Model.HasPicture.ToString() == "1" && Model.IDUser.ToString() != "" && Model.IDUser.ToString() != "0")
                            {
                                <center><img name="pic_profile" class="pic_frame" id="pic_profile" src="/Account/getImage/@Model.IDUser.ToString()" alt="profile_pic" /></center>
                            }
                            else
                            {
                                <center><img name="pic_profile" class="pic_frame" id="pic_profile" src="~/Content/assets/images/avatar-1.jpg" alt="profile_pic" /></center>
                            }
                        }

                    </div>
                        <div class="custom-file mb-3">
                            <input name="fileUpload" type="file" class="custom-file-input" id="customFile">
                            <label class="custom-file-label" for="customFile">Upload Picture</label>
                        </div>
                        <button id="btnSave" class="btn btn-primary" type="submit">Save Changes</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    }
                </div>
                <div class="modal-footer">

                </div>
            </div>
        </div>
    </div>
    <div id="edit_emp" class="collapse">
        <div class="section-block" id="basicform">
            <h3 class="section-title">Full Users Details</h3>
            <p></p>
        </div>
        <div class="card">
            <h5 class="card-header">Personal Details</h5>
            @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @name = "FormDetailsUsers" }))
            {
                @Html.AntiForgeryToken();
                @Html.HiddenFor(model => model.IDUser, "");
            <div class="card-body">

                <div class="form-group">
                    <label class="col-form-label">Name</label>
                    @Html.TextBoxFor(model => model.User_Name, new { @class = "form-control", @required = "required" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Address Line 1</label>
                    @Html.TextBoxFor(model => model.add_1, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Address Line 2</label>
                    @Html.TextBoxFor(model => model.add_2, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Postcode</label>
                    @Html.TextBoxFor(model => model.add_poscode, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">City</label>
                    @Html.TextBoxFor(model => model.add_city, new { @class = "form-control" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">State</label>
                    @Html.TextBoxFor(model => model.add_state, new { @class = "form-control" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">Phone No</label>
                    @Html.TextBoxFor(model => model.phone_no, new { @class = "form-control" })

                </div>

            </div>
            <div class="card-body border-top">
                <h3>Work Details</h3>
                <div class="form-group">
                    <label class="col-form-label">Position</label>
                    @if (ViewData["UserCatList"] != null)
                    {
                        @Html.DropDownListFor(model => model.User_Cat, ViewData["UserCatList"] as IEnumerable<SelectListItem>, new { @class="form-control"});
                        @*@Html.DropDownList("position", ViewData["UserCatList"] as IEnumerable<SelectListItem>, new { @class = "form-control" })*@
                    }

                </div>
            </div>
            <div class="card-body border-top">
                <h3>Login Details</h3>
                <div class="form-group">
                    <label class="col-form-label">Email</label>
                    @Html.LabelFor(model => model.UserEmail, Model != null ? Model.UserEmail : "", new { @class = "form-control", @type = "email", @required="required" })

                </div>
                <div class="form-group">
                    <label class="col-form-label">Set Password</label>
                    @Html.TextBoxFor(model => model.UserPassword, new { @class = "form-control", @type = "password", @required = "required" })

                </div>
                @*<div class="form-group">
                <label class="col-form-label">Password Confirmation</label>
                @Html.TextBox("password_confirm", "", new { @class = "form-control", @type = "password" })

            </div>*@
            </div>
            <div class="card-footer border-top">
                <button id="btnSubmit" type="submit" class="btn btn-success">Save Changes</button>
                <a id="btnDelete" href="/Account/Delete/@(Model != null ? Model.IDUser:0)" class="btn btn-danger">Delete User</a>
                @if(Model != null)
                {
                    if(Model.IDUser.ToString() != "" && Model.IDUser.ToString() != "0")
                    {
                        <button type="button" class="btn btn-default" data-toggle="modal" data-target="#add_pic">Upload Profile Picture</button>
                    }
                }
            </div>
        }
        </div>
    </div>

    <div class="card">
        <h5 class="card-header">List of Users</h5>
        <div class="card-body">
            <div class="table-responsive">
                <table id="tblData" class="table" width="100%">
                    <thead>
                        <tr>
                            @*<th>ID</th>*@
                            <th style="min-width:40%">Name</th>
                            <th>Email</th>
                            <th>Position</th>
                            <th>Phone No</th>
                        </tr>
                    </thead>
                </table>
                <script type="text/javascript">
                    $(document).ready(function () {
                        t = $('#tblData').DataTable({
                            stateSave: true, "info": true, dom: "ftrip", "processing": true,
                            "serverSide": true,
                            "ajax": {
                                "url": "/Account/List",
                                "dataType": "json",
                                "data": "data"
                            }
                            //"order": [[1, 'asc']], select: {
                            //    style: 'single'
                            //},
                            //"scrollX": true,
                            //"scrollCollapse": true
                        });

                    });

                    $(function () {
                        $(".select2").select2({
                            dropdownParent: $("#edit_tic")
                        });
                    });


                </script>
            </div>
        </div>
    </div>
    <div class="row">
        &nbsp;
    </div>

</div>

