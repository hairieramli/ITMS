@using ITMS.Models
@model ITMS.Models.ReportModel
@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/_Layout2.cshtml";

}
<script type="text/javascript">



    function showTech() {
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
        $("#txt_emp").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Report/showTech",
                    dataType: "jsonp",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 0,
            select: function (event, ui) {

                $('#txt_emp').val(ui.item.value);
                $('#hid_emp').val(ui.item.id);
            }
        });
    }

    function loadEmp() {
        //function log(message) {
        //    $("<div>").text(message).prependTo("#log");
        //    $("#log").scrollTop(0);
        //}
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
        $("#txt_emp").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Report/getTech",
                    dataType: "jsonp",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {

                $('#txt_emp').val(ui.item.value);
                $('#hid_emp').val(ui.item.id);
            }
        });
    }

    //$(document).ready(function () {
    //    var data = ["Boston Celtics", "Chicago Bulls", "Miami Heat", "Orlando Magic", "Atlanta Hawks", "Philadelphia Sixers", "New York Knicks", "Indiana Pacers", "Charlotte Bobcats", "Milwaukee Bucks", "Detroit Pistons", "New Jersey Nets", "Toronto Raptors", "Washington Wizards", "Cleveland Cavaliers"];

    //});

    $(document).ready(function () {
        $("#newbtn").click(function () {
            let el = document.getElementById("add_rep");
            let inputs = el.getElementsByTagName("input");

            for (let i = 0; i < inputs.length; i++) {
                if (inputs[i].type=="text")
                    inputs[i].value = "";
            }

            $("#add_rep").show();
            $("#edit_rep").hide();
        });


        @if(TempData["return_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#btnCreate").notify(@TempData["error"].ToString(), { position: "bottom", className:"warn" });
            }
            else if((int)TempData["return_value"] <= 0)
            {
                @:$("#add_inv").addClass("show");
                @:$("#btnCreate").notify("Failed to add new Report.", { position: "bottom", className: "error" });
            }
            else
            {
                @:$("#tblData").notify("Succesfully added new Report", { position: "top center", className: "success", arrowShow: false });
            }
        }
        else if(TempData["not_return_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#tblData").notify(@TempData["error"].ToString(), { position: "top center", className:"warn", arrowShow:false});
            }
            else if((int)TempData["not_return_value"] > 0)
            {
                @:$("#tblData").notify("User has been notified", { position: "top center", className:"success", arrowShow:false});
            }
        }
        else if(TempData["edit_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#tblData").notify(@TempData["error"].ToString(), { position: "top center", className:"warn", arrowShow:false});
            }
            else if((int)TempData["edit_value"] > 0)
            {
                @:$("#edit_rep").show();
            }
        }
        else if(TempData["edit_return_value"] != null)
        {
            @:$("#edit_inv").show();
            if(TempData["error"] != null)
            {
                @:$("#btnSave").notify(@TempData["error"].ToString(), { position: "bottom", className:"warn" });
            }
            else if((int)TempData["edit_return_value"] > 0)
            {
                @:$("#btnSave").notify("Saved Changes successfully.", { position: "bottom", className:"success" });
            }
        }
        else if(TempData["del_return_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#edit_inv").show();
                @:$("#btnDelete").notify(@TempData["error"].ToString(), { position: "bottom", className:"warn" });
            }
            else if((int)TempData["del_return_value"] > 0)
            {
                @:$("#tblData").notify("Succesfully removed Report", { position: "top center", className:"success", arrowShow:false});
            }
            else if ((int)TempData["del_return_value"] <= 0)
            {
                @:$("#edit_inv").show();
                @:$("#btnDelete").notify("Failed to remove Report", { position: "bottom", className:"error" });
            }
        }
        else if(TempData["tic_return_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#edit_tic").show();
                @:$("#btnGenTic").notify(@TempData["error"].ToString(), { position: "bottom", className:"warn" });
            }
            else if((int)TempData["tic_return_value"] > 0)
            {
                @:$("#tblData").notify("Succesfully generated ticket for the report.", { position: "top center", className:"success", arrowShow:false});
            }
            else if ((int)TempData["del_return_value"] <= 0)
            {
                @:$("#edit_tic").show();
                @:$("#btnGenTic").notify("Failed to remove Report", { position: "bottom", className:"error" });
            }
        }
        else if(TempData["edit_tic_value"] != null)
        {
            if(TempData["error"] != null)
            {
                @:$("#edit_tic").show();
                @:$("#btnGenTic").notify(@TempData["error"].ToString(), { position: "bottom", className:"warn" });
            }
            else if((int)TempData["edit_tic_value"] > 0)
            {
                @:$("#tblData").notify("Work status has been updated successfully.", { position: "top center", className:"success", arrowShow:false});
            }
            else if ((int)TempData["edit_tic_value"] <= 0)
            {
                @:$("#edit_tic").show();
                @:$("#btnGenTic").notify("Failed to update, please try again.", { position: "bottom", className:"error" });
            }
        }
    }


    );


</script>
<link href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
@*<link href="~/Content/assets/vendor/datatables/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <script src="~/Content/assets/vendor/datatables/js/dataTables.bootstrap4.min.js"></script>*@
<div class="page-header">
    <div class="pageheader-title">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="page-breadcrumb">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="breadcrumb-link">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Report</li>
            </ol>
        </nav>
    </div>
</div>
<div>
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            @if (HttpContext.Current.Session["User_Cat"] != null)
            {
                if (HttpContext.Current.Session["User_Cat"].ToString() == "3")
                {
                    <a id="newbtn" class="btn btn-app btn-info">
                        <i class="fa fa-edit"></i>
                        New Report
                    </a>
                }
            }

        </div>
    </div>
    <div class="row">
        &nbsp;
    </div>
    <div id="add_rep" class="card collapse">
        <h5 class="card-header">Submit New Report</h5>
        <div class="card-body">
            @using (Html.BeginForm("Create", "Report", FormMethod.Post, new { @name = "FormRep" }))
            {
                <div class="form-group">
                    <label class="col-form-label">Title</label>
                    @Html.TextBox("rep_title", "", new { @id = "txtTit", @class = "form-control", @required = "required" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Description</label>
                    @Html.TextArea("rep_desc", "", new { @class = "form-control", @required = "required", @row = "5", @width = "100%" })
                </div>
                <div class="form-group">

                </div>
                <button id="btnCreate" type="submit" class="btn btn-primary" name="Submit">Add Report</button>
            }
        </div>

    </div>
    <div id="edit_rep" class="card collapse">
        <h5 class="card-header">Report Details</h5>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Report", FormMethod.Post, new { @name = "FormEditRep" }))
            {
                @Html.AntiForgeryToken();
                @Html.HiddenFor(model => model.IDrep, "");
                @Html.HiddenFor(model => model.IDUser, "");

                <div class="form-group">
                    <label class="col-form-label">Title</label>
                    @Html.TextBoxFor(model => model.rep_title, "", new { @class = "form-control", @required = "required" })
                </div>
                <div class="form-group">
                    <label class="col-form-label">Description</label>
                    @Html.TextAreaFor(model => model.rep_desc, 5, 10, new { @class = "form-control", @required = "required", @row = "5", @width = "100%" })
                </div>
                <div class="form-group">
                    <table style="width:40%" cellpadding="2" border="0">
                        <tr>
                            <th>Submitted By</th>
                            <th>:</th>
                            <td>@Html.LabelFor(Model => Model.UserName, Model!= null ? Model.UserName.ToUpperInvariant(): "", new { @class = "col-form-label", @style = "color:#2DAB11;font-family:arial;font-weight:bold" })</td>
                        </tr>
                        <tr>
                            <th>Status</th>
                            <th>:</th>
                            <td>@Html.LabelFor(Model => Model.ticketStatus, Model != null ? Model.ticketStatus.ToUpperInvariant():"", new { @class = "col-form-label", @style = "color:#2DAB11;font-family:arial;font-weight:bold" })</td>
                        </tr>
                        <tr>
                            <th>Submitted Date</th>
                            <th>:</th>
                            <td>@Html.LabelFor(Model => Model.submittedDate, Model!=null ? String.Format("{0:dd MMM yyy hh:mm}", Model.submittedDate):"", new { @class = "col-form-label", @style = "color:#2DAB11;font-family:arial;font-weight:bold" })</td>
                        </tr>
                        @if (Model != null)
                        {
                            if (Model.IDtechnician != 0)
                            {
                                <tr>
                                    <th>Assigned Technician</th>
                                    <th>:</th>
                                    <td>@Html.LabelFor(Model => Model.technician, Model.technician.ToUpperInvariant(), new { @class = "col-form-label", @style = "color:#2DAB11;font-family:arial;font-weight:bold" })</td>
                                </tr>
                            }
                        }
                    </table>
                </div>

                if (HttpContext.Current.Session["User_Cat"] != null && Model != null)
                {
                    if (HttpContext.Current.Session["User_Cat"].ToString() == "3")
                    {
                        <button id="btnSave" class="btn btn-primary" type="submit">Save Changes</button>

                    }
                    if ((HttpContext.Current.Session["User_Cat"].ToString() == "1" || HttpContext.Current.Session["User_Cat"].ToString() == "3") && Model.ticketStatus.ToString().ToLower() == "pending")
                    {
                        <a id="btnDelete" href="/Report/Delete/@(Model != null ? Model.IDrep:0)" class="btn btn-danger">Remove Report</a>
                    }
                }
                if (Model != null && HttpContext.Current.Session["User_Cat"] != null)
                {
                    if (HttpContext.Current.Session["User_Cat"].ToString() == "1")
                    {
                        if (Model.ticketStatus.ToString().ToLower() == "work done")
                        {
                            <a id="btnNotify" href="/Report/NotifyUser/@(Model != null ? Model.IDrep:0)" class="btn btn-danger">Notify User</a>
                        }
                        if (Model.ticketStatus.ToString().ToLower() == "pending")
                        {
                            <button class="btn btn-success" type="button" data-toggle="modal" data-target="#edit_tic">Generate Ticket</button>
                        }
                        else
                        {
                            <button class="btn btn-success" type="button" data-toggle="modal" data-target="#edit_tic">View Ticket</button>
                        }
                    }
                    else
                    {

                        <button class="btn btn-success" type="button" data-toggle="modal" data-target="#edit_tic">View Ticket</button>
                    }
                }

            }
        </div>

    </div>
    @*overflow:hidden;margin-left:-30vw;margin-top:-30vh;width:50%;height:50%;position: absolute;
    left: 50%;
    top: 50%;*@
    <div id="edit_tic" data-keyboard="false" aria-hidden="true" class="modal fade hide" style="" data-backdrop="static" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generate Ticket</h5>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Create", "Ticket", FormMethod.Post, new { @name = "FormEditTic" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.Hidden("hidRep", Model != null ? Model.IDrep : 0);
                        @Html.Hidden("hidTic", Model != null ? Model.IDTicket : 0);
                        @Html.Hidden("TicDate", Model != null ? Model.TicketDate.ToString() : "0");
                        <div class="form-group">
                            <label class="col-form-label">Task Type</label>
                            @if (Model != null)
                            {
                                if (Model.IDTicket != 0)
                                {
                                    @Html.TextBox("txt_task_type", Model != null ? Model.task_type : "", new { @class = "form-control", @required = "required", @readonly="readonly"})
                                }
                                else
                                {
                                    @Html.TextBox("txt_task_type", Model != null ? Model.task_type : "", new { @class = "form-control", @readonly = "readonly" })
                                }
                            }

                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Priority</label>
                            @if (Model != null)
                            {
                                if (Model.IDTicket != 0)
                                {
                                    @Html.DropDownList("ddl_prio", ViewData["priorityList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @Enabled="false" })
                                }
                                else
                                {
                                    @Html.DropDownList("ddl_prio", ViewData["priorityList"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                }
                            }


                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Choose Technician</label>
                            @if (Model != null)
                            {
                                if (Model.IDtechnician != 0)
                                {
                                    @Html.DropDownList("ddl_tech", ViewData["techList"] as IEnumerable<SelectListItem>, new { @class = "form-control select2", @Enabled="false" })
                                }
                                else
                                {
                                    @Html.DropDownList("ddl_tech", ViewData["techList"] as IEnumerable<SelectListItem>, new { @class = "form-control select2" })
                                }
                            }

                            @*<select id="ddl_tech" name="ddl_tech" class="form-control select2"></select>*@

                        </div>
                        <div class="form-group">
                            @if (Model != null && HttpContext.Current.Session["User_Cat"] != null)
                            {
                                if (Model.ticketStatus.ToLower() != "pending" && Model.ticketStatus.ToLower() != "work done" && HttpContext.Current.Session["User_Cat"].ToString() == "2")
                                {

                                    <label class="col-form-label">Update Status</label>
                                    @Html.DropDownList("ddl_status", ViewData["work_status"] as IEnumerable<SelectListItem>, new { @class="form-control"});
                                }
                            }
                        </div>
                        if (Model != null && HttpContext.Current.Session["User_Cat"] != null)
                        {
                            if (Model.ticketStatus.ToString().ToLower() == "pending" && HttpContext.Current.Session["User_Cat"].ToString() == "1")
                            {
                                <button id="btnGenTic" class="btn btn-primary" type="submit">Generate</button>
                                @*<button id="btnCancelTic" class="btn btn-danger" type="submit">Cancel Ticket</button>*@
                            }
                            else if (Model.ticketStatus.ToLower() == "in process" && HttpContext.Current.Session["IDUser"].ToString() == Model.IDtechnician.ToString())
                            {
                                <button id="btnGenTic" class="btn btn-primary" type="submit">Update Status</button>
                            }
                        }

                        <button class="btn btn-default" data-dismiss="modal" type="button">Cancel</button>
                    }
                </div>
            </div>
        </div>
        



    </div>

    <div class="card">
        <h5 class="card-header">List of Reports</h5>
        <div class="card-body">
            <div class="table-responsive">
                <table id="tblData" class="table" width="100%">
                    <thead>
                        <tr>
                            @*<th>ID</th>*@
                            <th style="min-width:40%">Title</th>
                            <th>Submitted By</th>
                            <th>Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                </table>
                <script type="text/javascript">
                    $(document).ready(function () {
                        t = $('#tblData').DataTable({
                            stateSave: true, "info": true, dom: "ftrip", "processing": true,
                            "serverSide": true,
                            "ajax": {
                                "url": "/Report/List",
                                "dataType": "json",
                                "data": "data"
                            }
                            //"order": [[1, 'asc']], select: {
                            //    style: 'single'
                            //},
                            //"scrollX": true,
                            //"scrollCollapse": true
                        });

                    });

                    $(function () {
                        $(".select2").select2({
                            dropdownParent: $("#edit_tic")
                        });
                        //loadTech();

                    });

                    function loadTech() {
                        console.log('test');
                        var feedback = $.ajax({
                            type: "POST",
                            url: "/Report/showTech",
                            dataType: "jsonp",
                            success: function (data) {
                                if (data != "") {
                                    $(data).each(function () {
                                        $("#ddl_tech").append($("<option></option>").val(this.id).html(this.value));
                                    });
                                }
                            }
                        });
                    }

                </script>
            </div>
        </div>
    </div>
    <div class="row">
        &nbsp;
    </div>

</div>





